// Yank properties from shared file
Properties props = new Properties()
file("../gradle.properties").withInputStream { props.load(it) }
props.each { key, val ->
    ext.set(key, val)
}
buildscript {
    Properties buildScriptProps = new Properties()
    file("../gradle.properties").withInputStream { buildScriptProps.load(it) }
    buildScriptProps.each { key, val ->
        ext.set(key, val)
    }
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}"
        classpath "com.vanniktech:gradle-maven-publish-plugin:${maven_publish_plugin_version}"
    }
}

apply plugin: "java-gradle-plugin"
apply plugin: "org.jetbrains.kotlin.jvm"
apply plugin: "org.jetbrains.kotlin.kapt"
apply plugin: "com.vanniktech.maven.publish"

repositories {
    google()
    jcenter()
}

//region Version.kt template for setting the project version in the build
sourceSets {
    main.java.srcDirs += "$buildDir/generated/sources/version-templates/kotlin/main"
}

TaskProvider copyVersionTemplatesProvider = tasks.register("copyVersionTemplates", Copy) {
    from rootProject.layout.projectDirectory.dir("version-templates")
    into project.layout.buildDirectory.dir("generated/sources/version-templates/kotlin/main")
    expand('projectVersion': "${project.version}")
    filteringCharset = 'UTF-8'
}
//endregion

compileKotlin {
    dependsOn copyVersionTemplatesProvider
    kotlinOptions {
        jvmTarget = System.getenv().getOrDefault("ci_java_version", "1.8")
        freeCompilerArgs += ['-progressive']
    }
}

gradlePlugin {
    plugins {
        redactedPlugin {
            id = 'dev.zacsweers.redacted.redacted-gradle-plugin'
            implementationClass = 'dev.zacsweers.redacted.gradle.RedactedGradleSubplugin'
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-gradle-plugin-api:$kotlin_version"
    compileOnly "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    compileOnly "com.android.tools.build:gradle:4.1.1"

    compileOnly "com.google.auto.service:auto-service-annotations:$autoservice_version"
    kapt "com.google.auto.service:auto-service:$autoservice_version"
}